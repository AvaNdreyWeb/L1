// Дана переменная int64. Разработать программу которая устанавливает
// i-й бит в 1 или 0.

package main

import "fmt"

func main() {
	var x int64 = 7
	fmt.Println("Исходное число:")
	fmt.Printf("%0*b -> %d\n\n", 11, x, x)

	fmt.Println("Установка 0 бита в 0:")
	setBit0(&x, 0)
	fmt.Printf("%0*b -> %d\n\n", 11, x, x)

	fmt.Println("Установка 10 бита в 1:")
	setBit1(&x, 10)
	fmt.Printf("%0*b -> %d\n\n", 11, x, x)
}

// Чтобы установить i-й бит в 1, создадим маску в которой 1 установим в i-й
// разряд, а затем используем побитовую дизъюнкцию.
// Тогда 0 | 1 = 1, или 1 | 1 = 1
func setBit1(x *int64, i int) {
	var mask int64 = 1 << int64(i)
	*x = *x | mask
}

// Чтобы установить i-й бит в 0, создадим маску в которой сначала 1 установим в
// i-й разряд, а затем инвертируем её, после чего используем побитовую конъюнкцию
// Тогда 0 & 0 = 0, или 1 & 0 = 0
func setBit0(x *int64, i int) {
	var mask int64 = ^(1 << int64(i))
	*x = *x & mask
}
